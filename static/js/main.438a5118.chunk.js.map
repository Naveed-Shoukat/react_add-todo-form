{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","classNames","completed","id","title","TodoList","todos","map","username","userId","getUser","usersFromServer","find","todosWithUser","todosFromServer","App","React","useState","setTodos","setTitle","selectedUser","setSelectedUser","addError","setAddError","action","method","onSubmit","event","preventDefault","allTodoIds","maxID","Math","max","newTodo","push","handleAddTodo","htmlFor","type","placeholder","value","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.438a5118.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype UserInfoProps = {\n  user: User | null\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype TodoInfoProps = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const classNames = todo.completed\n    ? 'TodoInfo TodoInfo--completed'\n    : 'TodoInfo';\n\n  return (\n    <article data-id={todo.id} className={classNames}>\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport './App.scss';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosWithUser = () => {\n  return todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n};\n\nexport const App = () => {\n  const [todos, setTodos] = React.useState(todosWithUser);\n  const [title, setTitle] = React.useState('');\n  const [selectedUser, setSelectedUser] = React.useState(0);\n  const [addError, setAddError] = React.useState(false);\n\n  const handleAddTodo = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (title && selectedUser) {\n      const user = getUser(selectedUser);\n      const allTodoIds = todos.map(todo => todo.id);\n      const maxID = Math.max(...allTodoIds);\n\n      if (user) {\n        const newTodo = {\n          id: maxID + 1,\n          userId: user.id,\n          title,\n          completed: false,\n        };\n\n        todosFromServer.push(newTodo);\n      }\n\n      setTodos(todosWithUser);\n      setTitle('');\n      setSelectedUser(0);\n      setAddError(false);\n    } else {\n      setAddError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => handleAddTodo(event)}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => setTitle(() => {\n              return event.target.value.replace(/[^a-z0-9 ]/gi, '');\n            })}\n          />\n\n          {addError && !title && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => setSelectedUser(+event.target.value)}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {addError && !selectedUser && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}